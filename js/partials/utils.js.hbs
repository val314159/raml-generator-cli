var TEMPLATE_REGEXP = /\{([^\{\}]+)\}/g;

/**
 * @param  {String} string
 * @param  {Object} interpolate
 * @param  {Object} defaults
 * @return {String}
 */
function template (string, interpolate, defaults) {
  defaults    = defaults || {};
  interpolate = interpolate || {};

  return string.replace(TEMPLATE_REGEXP, function (match, key) {
    if (interpolate[key] != null) {
      return encodeURIComponent(interpolate[key]);
    }

    if (defaults[key] != null) {
      return encodeURIComponent(defaults[key]);
    }

    return '';
  });
}

/**
 * @param  {Object} dest
 * @param  {Object} ...source
 * @return {Object}
 */
function extend (dest /*, ...source */) {
  for (var i = 1; i < arguments.length; i++) {
    for (var key in arguments[i]) {
      dest[key] = arguments[i][key];
    }
  }

  return dest;
}
